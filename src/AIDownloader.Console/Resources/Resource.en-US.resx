<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AITypeSelection" xml:space="preserve">
    <value>Select the AI host service</value>
  </data>
  <data name="Aria2cCleaned" xml:space="preserve">
    <value>The remnants of the ARIA2C process have been cleaned up</value>
  </data>
  <data name="Aria2cInitialized" xml:space="preserve">
    <value>Aria2c client initialization successful. Port:</value>
  </data>
  <data name="Aria2cNotClean" xml:space="preserve">
    <value>Residual aria2c.exe processes can't be cleaned up, restart the app in administrator mode</value>
  </data>
  <data name="BeginAddFiles" xml:space="preserve">
    <value>Start adding downloads</value>
  </data>
  <data name="BeginDownload" xml:space="preserve">
    <value>Start downloading the file...</value>
  </data>
  <data name="ChooseDownloadFiles" xml:space="preserve">
    <value>Select the file you want to download</value>
  </data>
  <data name="CivitaiToken" xml:space="preserve">
    <value>Please enter the Civitai access token:</value>
  </data>
  <data name="DownloadCompleted" xml:space="preserve">
    <value>All files are downloaded</value>
  </data>
  <data name="DownloadError" xml:space="preserve">
    <value>File {0} download failed</value>
  </data>
  <data name="FileAdded" xml:space="preserve">
    <value>File added complete, total {0} file.</value>
  </data>
  <data name="FileName" xml:space="preserve">
    <value>File name</value>
  </data>
  <data name="FolderNotExist" xml:space="preserve">
    <value>The selected folder does not exist</value>
  </data>
  <data name="FolderPickerTip" xml:space="preserve">
    <value>Which folder do you want to save to?</value>
  </data>
  <data name="GetFileList" xml:space="preserve">
    <value>A list of files that have been fetched for {0}</value>
  </data>
  <data name="HuggingFaceSource" xml:space="preserve">
    <value>Please select a Hugging Face source</value>
  </data>
  <data name="HuggingFaceToken" xml:space="preserve">
    <value>Please enter the Hugging Face access token:</value>
  </data>
  <data name="InvalidToken" xml:space="preserve">
    <value>The token is invalid</value>
  </data>
  <data name="ModelIdInput" xml:space="preserve">
    <value>Please enter the model ID:</value>
  </data>
  <data name="ModelIdInputFailed" xml:space="preserve">
    <value>Please enter the correct model ID</value>
  </data>
  <data name="ModelIdOrLinkInput" xml:space="preserve">
    <value>Please enter the model ID or page link:</value>
  </data>
  <data name="ModelNotFound" xml:space="preserve">
    <value>No suitable model was found</value>
  </data>
  <data name="ModelScope" xml:space="preserve">
    <value>Model Scope</value>
  </data>
  <data name="ModelScopeToken" xml:space="preserve">
    <value>Please enter the Model Scope access token:</value>
  </data>
  <data name="MoreFileOperationTip" xml:space="preserve">
    <value>Press the [blue]Space key[/] to toggle the file selection, and the [green]Enter key[/] submit</value>
  </data>
  <data name="MoreFileTip" xml:space="preserve">
    <value>Move up or down to see more files</value>
  </data>
  <data name="MoreFolderTip" xml:space="preserve">
    <value>Move up or down to see more folders</value>
  </data>
  <data name="NoAvailableDownloadLink" xml:space="preserve">
    <value>No available download link found</value>
  </data>
  <data name="NoSelectedFolder" xml:space="preserve">
    <value>No folder selected</value>
  </data>
  <data name="Optional" xml:space="preserve">
    <value>Optional</value>
  </data>
  <data name="SelectedFolder" xml:space="preserve">
    <value>Folder selected:</value>
  </data>
  <data name="SelectModelVersion" xml:space="preserve">
    <value>Select the appropriate model version</value>
  </data>
  <data name="SelectSaveFolder" xml:space="preserve">
    <value>Please select a folder to save your downloads</value>
  </data>
</root>