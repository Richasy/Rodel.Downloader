<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AboutThisApp" xml:space="preserve">
    <value>About this app</value>
  </data>
  <data name="AccessToken" xml:space="preserve">
    <value>Access token</value>
  </data>
  <data name="AccessTokenTip" xml:space="preserve">
    <value>Please enter access token</value>
  </data>
  <data name="Add" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="AddingDownloadItems" xml:space="preserve">
    <value>Adding download items</value>
  </data>
  <data name="AppName" xml:space="preserve">
    <value>Rodel Downloader</value>
  </data>
  <data name="AppTheme" xml:space="preserve">
    <value>App Theme</value>
  </data>
  <data name="AppThemeDescription" xml:space="preserve">
    <value>Select the theme for the application to display.</value>
  </data>
  <data name="Back" xml:space="preserve">
    <value>Back</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="ChooseOther" xml:space="preserve">
    <value>Select others</value>
  </data>
  <data name="ChooseSaveFolder" xml:space="preserve">
    <value>Select storage folder</value>
  </data>
  <data name="CivitaiConfiguration" xml:space="preserve">
    <value>Civitai Configuration</value>
  </data>
  <data name="CivitaiDownload" xml:space="preserve">
    <value>Civitai Model Download</value>
  </data>
  <data name="CivitaiSettingDescription" xml:space="preserve">
    <value>Configure the tokens, folders, etc. required for Civitai model download</value>
  </data>
  <data name="Completed" xml:space="preserve">
    <value>Completed</value>
  </data>
  <data name="Confirm" xml:space="preserve">
    <value>Confirm</value>
  </data>
  <data name="Copied" xml:space="preserve">
    <value>Copied</value>
  </data>
  <data name="CopyLink" xml:space="preserve">
    <value>Copy link</value>
  </data>
  <data name="CopyrightTemplate" xml:space="preserve">
    <value>{0} Richasy. All rights reserved.</value>
  </data>
  <data name="DarkTheme" xml:space="preserve">
    <value>Dark</value>
  </data>
  <data name="DeselectAll" xml:space="preserve">
    <value>Deselect all</value>
  </data>
  <data name="DownloadListEmptyDescription" xml:space="preserve">
    <value>Which model would you like to download this time?</value>
  </data>
  <data name="DownloadListEmptyTitle" xml:space="preserve">
    <value>Empty</value>
  </data>
  <data name="DownloadModel" xml:space="preserve">
    <value>Download model</value>
  </data>
  <data name="DownloadProgressTipTemplate" xml:space="preserve">
    <value>A total of {0} tasks, {1} completed</value>
  </data>
  <data name="ExportCompleted" xml:space="preserve">
    <value>Export completed</value>
  </data>
  <data name="ExportConfig" xml:space="preserve">
    <value>Export config</value>
  </data>
  <data name="FileList" xml:space="preserve">
    <value>File list</value>
  </data>
  <data name="FinishDescription" xml:space="preserve">
    <value>The downloader will download the AI model for you based on the configuration information you provide. You can modify them in the application settings at any time. Enjoy your use.</value>
  </data>
  <data name="FinishTitle" xml:space="preserve">
    <value>You have completed all the configurations!</value>
  </data>
  <data name="FolderOpenFailed" xml:space="preserve">
    <value>Unable to open this folder</value>
  </data>
  <data name="Generic" xml:space="preserve">
    <value>General</value>
  </data>
  <data name="HuggingFaceConfiguration" xml:space="preserve">
    <value>Hugging Face Configuration</value>
  </data>
  <data name="HuggingFaceDownload" xml:space="preserve">
    <value>Hugging Face Model Download</value>
  </data>
  <data name="HuggingFaceSettingDescription" xml:space="preserve">
    <value>Configure the tokens, folders, etc. required for Hugging Face model download</value>
  </data>
  <data name="ImportCompleted" xml:space="preserve">
    <value>Import completed</value>
  </data>
  <data name="ImportConfig" xml:space="preserve">
    <value>Import config</value>
  </data>
  <data name="ImportConfigFailed" xml:space="preserve">
    <value>Failed to import configuration</value>
  </data>
  <data name="InvalidModelId" xml:space="preserve">
    <value>Invalid Model ID</value>
  </data>
  <data name="InvalidSavePath" xml:space="preserve">
    <value>Invalid save path</value>
  </data>
  <data name="LaunchApp" xml:space="preserve">
    <value>Launch Application</value>
  </data>
  <data name="LightTheme" xml:space="preserve">
    <value>Light</value>
  </data>
  <data name="Log" xml:space="preserve">
    <value>App Log</value>
  </data>
  <data name="LogDescription" xml:space="preserve">
    <value>View application log or clear log records</value>
  </data>
  <data name="Mirror" xml:space="preserve">
    <value>Mirror</value>
  </data>
  <data name="ModelId" xml:space="preserve">
    <value>Model ID</value>
  </data>
  <data name="ModelIdOrLink" xml:space="preserve">
    <value>Model ID or page link</value>
  </data>
  <data name="ModelIdPlaceholder" xml:space="preserve">
    <value>Model ID or Page Link</value>
  </data>
  <data name="ModelScope" xml:space="preserve">
    <value>Model Scope</value>
  </data>
  <data name="ModelScopeConfiguration" xml:space="preserve">
    <value>Model Scope Configuration</value>
  </data>
  <data name="ModelScopeDownload" xml:space="preserve">
    <value>Model Scope Download</value>
  </data>
  <data name="ModelScopeSettingDescription" xml:space="preserve">
    <value>Configure the tokens, folders, etc. required for Model Scope download</value>
  </data>
  <data name="ModifyName" xml:space="preserve">
    <value>Change name</value>
  </data>
  <data name="NeedAddSaveFolder" xml:space="preserve">
    <value>Please add a folder to save the model</value>
  </data>
  <data name="NextStep" xml:space="preserve">
    <value>Next</value>
  </data>
  <data name="NoAvailableDownloadItems" xml:space="preserve">
    <value>No available download items were found</value>
  </data>
  <data name="NoItemSelected" xml:space="preserve">
    <value>No items selected</value>
  </data>
  <data name="Official" xml:space="preserve">
    <value>Official</value>
  </data>
  <data name="OpenFileLocation" xml:space="preserve">
    <value>Open file location</value>
  </data>
  <data name="OpenFolder" xml:space="preserve">
    <value>Open folder</value>
  </data>
  <data name="OpenLogFolder" xml:space="preserve">
    <value>Open log folder</value>
  </data>
  <data name="OtherProjects" xml:space="preserve">
    <value>Other projects by developer</value>
  </data>
  <data name="Pause" xml:space="preserve">
    <value>Pause</value>
  </data>
  <data name="PauseAll" xml:space="preserve">
    <value>Pause All</value>
  </data>
  <data name="PrevStep" xml:space="preserve">
    <value>Previous</value>
  </data>
  <data name="ProjectHomePage" xml:space="preserve">
    <value>Project homepage</value>
  </data>
  <data name="Remove" xml:space="preserve">
    <value>Remove</value>
  </data>
  <data name="RemoveFromDownloadList" xml:space="preserve">
    <value>Remove from Download List</value>
  </data>
  <data name="Repository" xml:space="preserve">
    <value>Open source repository</value>
  </data>
  <data name="Resume" xml:space="preserve">
    <value>Continue</value>
  </data>
  <data name="ResumeAll" xml:space="preserve">
    <value>Resume All</value>
  </data>
  <data name="Retry" xml:space="preserve">
    <value>Retry</value>
  </data>
  <data name="SaveFolderList" xml:space="preserve">
    <value>Storage folder list</value>
  </data>
  <data name="SelectAll" xml:space="preserve">
    <value>Select all</value>
  </data>
  <data name="SendFeedback" xml:space="preserve">
    <value>Send feedback</value>
  </data>
  <data name="Services" xml:space="preserve">
    <value>Services</value>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="SystemDefault" xml:space="preserve">
    <value>Use system settings</value>
  </data>
  <data name="WelcomeDescription" xml:space="preserve">
    <value>Before you start using, please follow me to do some simple configurations!</value>
  </data>
  <data name="WelcomeTitle" xml:space="preserve">
    <value>Welcome to Rodel Downloader</value>
  </data>
</root>